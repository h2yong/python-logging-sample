[project]
name = "python-logging-sample"
version = "0.1.0"
description = "python第三方日志sample，包含loguru/structlog"
authors = [{ name = "hezhiyong", email = "h2yong@outlook.com" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Typing :: Typed",
    "Topic :: System :: Logging",
    "Intended Audience :: Developers",
    "Natural Language :: Chinese",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: Implementation :: CPython",
]
requires-python = ">=3.11"
keywords = ["loguru", "structlog", "logging", "logger", "log"]
readme = 'README.md'

dependencies = [
    "loguru>=0.7.3",
    "structlog>=25.4.0",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "flask>=3.1.2",
    "mypy>=1.18.1",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "shortuuid>=1.0.13",
]

[tool.pytest.ini_options]
addopts = "-l"
filterwarnings = [
    # By default, all warnings are treated as errors.
    'error',
    # Mixing threads and "fork()" is deprecated, but we need to test it anyway.
    'ignore:.*use of fork\(\) may lead to deadlocks in the child.*:DeprecationWarning',
    # Using "set_event_loop()" is deprecated, but no alternative is provided.
    "ignore:.*'asyncio.set_event_loop' is deprecated.*:DeprecationWarning",
]
testpaths = ["tests"]
markers = "meta"

[tool.black]
line-length = 160 # 设置每行的最大字符数（默认 88）
target-version = ["py39", "py310", "py311"] # 指定 Python 目标版本（如 py38, py39, py310 等）
skip-string-normalization = false # 禁用字符串标准化（不强制双引号）
include = '\.pyi?$' # 格式化的文件类型（正则表达式）
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
''' # 排除的文件或目录（正则表达式）

[tool.mypy]
strict = true
pretty = true
show_error_codes = true
enable_error_code = ["ignore-without-code"]
ignore_missing_imports = true